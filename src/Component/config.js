export const configJSON = {
    juricdictionFeildHeading: "Jurisdiction",
    requiredFeildError: "Selection Required",
    typeApplicationHeading: "Type of Application",
    typeSpecificationHeading: "Type of Specification",
    noteMessage: "Note:Pages of claims, abstract & drawings should be given against respective field",
    completeProvisionHeading: "Complete/Provisional Specification(Description Part)",
    noOfPagesLabel: "No. of pages",
    claimsLabel: "Claim",
    additionalChargeMessage: "Additional charges over 9 claims",
    numberOfclaimsLabel: "No. of Claims",
    abstractHeading: "Abstract",
    numberOfDrawingHeading: "No. of Drawing(s)",
    sequenceListingLabel: "Sequence listing pages",
    numberOfPriorityLabel: "No. of Priorities",
    priorityHeading: "Priorities",
    addPriorityButtonText: "Add Priorities",
    totalCountOfPageMessage: "Total No of Pages (Including Drawings & Abstract ), Claims and Priorty are going to be used in Fee Calculation.",
    addressServiceHeading: "Address for Service (India)",
    addressServiceErrorMessage: "The provided information should not exceed 500 characters",
    stateHeading: "State",
    mobileNumberHeading: "Mobile Number",
    mobileNumberErrorMessage: "The mobile number should be 10 digits",
    mobileValidateError: "Enter valid mobile number",
    telephoneNumberHeading: "Telephone No.",
    telephoneNumberErrorMessage: "Please enter a valid telephone number",
    emailHeading: "Email ID",
    emailErrorMessage: "Enter valid Email Address",
    aleternativeEmailHeading: "Alternate Email ID(Optional)",
    aleternativeEmailErrorMessage: "The email address provided is not in a valid format",
    abstractTextChangeError: "The provided information should not exceed 100 characters",
    descriptionHeading: "Description",
    descriptionTextChangeError: "The provided information should not exceed 1000 characters",
    claimsHeading: "Claims",
    applicantsHeading: "Applicants",
    addApplicantsButtonText: "Add Applicants",
    applicantsDeclareInfoText: "I/We, the applicants hereby declare(s) that:-",
    checkBoxError: "You must select at least one checkbox before proceeding",
    inventorCopyDataText: "Inventors same as Applicant (copy data)",
    inventorHeadingText: "Inventors",
    addInventorButtonText: "Add Inventors",
    proofDocumentSubmitText: "(Proof of Rights, PA, Priority Documents etc are required to be submitted original)",
    resetButtonText: "Reset",
    saveButtonText: "Save",
    uploadButtonText: "Upload",
    astrick: "*",
    emailValidationRegex: /^[\w\.-]+@[\w\.-]+\.\w+$/,
    mobileNumberRegex: /^[0-9]{10}$/,
    telephoneNumberRegex: /^[0-9]{13}$/,
    require: "Fields marked with an asterisk * are Required.",
    applicant: "Applicant Name",
    applicantNumber: "Application No.",
    applicantError: "The provided information should not exceed 100 characters",
    addressError: "The provided information should not exceed 500 characters",
    pincodeError: "Enter Valid pincode",
    townDiscrict: "Town/City/District",
    applicantCityErrorMessage: "something went wrong...",
    stateUnionHeading: "State/Union/Territory",
    stateUnionError: "Select State/Union/Territory",
    countryHeading: "Country",
    countryError: "Select Country",
    cancelButtonText: "Cancel",
    addButtonText: "Add",
    applicantFormSuccess: "Application",
    successFormText: "successfully",
    doneButtonText: "Done",
    referenceId: "with Reference Number : DP-F23/65/2023",
    failedFormText: "Failed",
    tryAgainText: "Please try again or contact support.",
    retryButtonText: "Retry",
    hoverFieldDescriptionText: "Hover over the information icon for additional details or context about this field.",
    gotItButtonText: "Got it",
    addressText: "Address",
    pincodeFieldText: "Pincode",
    addApplicatns: "Applicant Details",
    addInventors: "Inventor Details",
    agreeTermCondtionText: "I agree that the above information submitted by me are true to my best knowledge",
    applicantNameCheckRegex: /^[a-zA-Z\s]*$/,
    pincodeChangeRegex: /^[1-9][0-9]{5}$/,
}